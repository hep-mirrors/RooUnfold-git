############################################
## global settings & macros
############################################

variables:
  GIT_SUBMODULE_STRATEGY: recursive
  TARGET_BRANCH: master

stages:
  - check
  - build
  - test
  - doc
  - deploy

.latex: &latex
  stage: doc
  image: registry.cern.ch/docker.io/blang/latex:ubuntu

.standalone: &standalone
  image: registry.cern.ch/docker.io/rootproject/root:6.32.02-ubuntu24.04
  before_script:
    - apt-get update
    - apt-get -y install python-is-python3 libvdt0.4
    - export CMAKE_PREFIX_PATH=$JSONMCPP__HOME:$VDT__HOME:$CMAKE_PREFIX_PATH

.doxygen: &doxygen
  <<: *standalone
  before_script:
    - apt-get update
    - apt-get -y install doxygen
  stage: doc

.ctest: &ctest
  stage: test
  script:
    - cd build
    - source setup.sh
    - ctest --output-on-failure
  artifacts:
    when: on_failure
    paths:
      - "*.ref"

.cmake: &cmake
  stage: build
  script:
    - mkdir build
    - cd build
    - cmake -DRooUnfoldTests=on ..
    - make
  artifacts:
    paths:
      - build

.GNUmake: &GNUmake
  stage: build
  script:
    make -j1 NOROOFIT=1
  artifacts:
    paths:
      - libRooUnfold.so
      - RooUnfoldDict_rdict.pcm
      - libRooUnfold.rootmap
      - RooUnfold/*.py


############################################
## formatting
############################################
check_formatting:
  stage: check
  tags:
    - cvmfs
  image: gitlab-registry.cern.ch/lhcb-docker/os-base/alma9-devel:latest
  script:
    - . /cvmfs/sft.cern.ch/lcg/views/setupViews.sh LCG_107 x86_64-el9-clang19-opt
    - python3 format-source --format-patch apply-formatting.patch origin/${TARGET_BRANCH}
  artifacts:
    paths:
      - apply-formatting.patch
    when: on_failure
    expire_in: 1 week

############################################
## building
############################################

compile_cmake:
  <<: *standalone
  <<: *cmake

compile_GNUmake:
  <<: *standalone
  <<: *GNUmake



############################################
## testing
############################################

test_cmake:
  <<: *standalone
  <<: *ctest
  dependencies:
    - compile_cmake

############################################
## documentation
############################################

doxygen:
  <<: *doxygen
  artifacts:
    paths:
      - build/doxygen
  dependencies: []
  script:
    - mkdir build
    - cd build
    - cmake ..
    - make doxygen

doc_bayes_errors:
  <<: *latex
  script:
    - cd doc/bayes_errors
    - pdflatex bayes_errors.tex
    - pdflatex bayes_errors.tex
  artifacts:
    paths:
      - doc/bayes_errors/bayes_errors.pdf

doc_phystat2011:
  <<: *latex
  script:
    - cd doc/phystat2011
    - pdflatex phystat2011_adye.tex
    - pdflatex phystat2011_adye.tex
  artifacts:
    paths:
      - doc/phystat2011/phystat2011_adye.pdf

doc_unfolding2010:
  <<: *latex
  script:
    - cd doc/unfolding2010
    - latex adye_tim.tex
    - dvipdf adye_tim.dvi
  artifacts:
    paths:
      - doc/unfolding2010/adye_tim.pdf
      - doc/unfolding2010/adye_tim.pdf

############################################
## documentation
############################################

pages:
   # Custom docker image providing the needed tools to deploy in DFS
  image: gitlab-registry.cern.ch/ci-tools/ci-web-deployer:latest

  script:
  - mkdir -p public
  - mv build/doxygen/html/* public
  - mv doc/*/*.pdf public
  - deploy-dfs

  before_script: []
  after_script: []

  stage: deploy

  dependencies:
    - doxygen
    - doc_bayes_errors
    - doc_phystat2011
    - doc_unfolding2010

  artifacts:
    name: "RooUnfoldDoc_${CI_COMMIT_REF_NAME}"
    expire_in: 6 mos
    paths:
    - public

  when: manual
